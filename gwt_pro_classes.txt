@startuml
header
Client Classes
endheader

interface JobsPresenterEventHandlers {
   + onJobUpdated(JobUpdatedEvent)
   + onJobInit(JobInitEvent)
   + onJobOutput(JobOutputEvent)
   + onJobSelection(JobSelectionEvent)
   + onJobElapsedTick(JobElapsedTickEvent)
}

interface JobsDisplayWorkbenchView {
   + updateJob(updateType, Job)
   + setInitialJobs(List<Job> jobs)
   + showJobOutput(jobId, JsArray<JobOutput>)
   + addJobOutput(jobId, outputType, output)
   + hideJobOutput(jobId)
   + syncElapsedTime(timestamp)
   + setShowTabPref(show)
}

interface JobsListView {
   + addJob(Job)
   + insertJob(Job)
   + removeJob(Job)
   + updateJob(Job)
   + clear()
   + syncElapsedTime(timestamp)
   + getJob(String id): Job
   + jobCount(): int
}

interface JobsListView
interface JobsPresenter::Display

class JobsTab::Shim
class JobsTab
class JobsPane
class JobsList

class JobsListViewImpl
class JobsPresenterEventHandlersImpl
class JobsPresenter
class JobsDisplayWorkbenchViewImpl

JobsPresenterEventHandlers <|.. JobsPresenterEventHandlersImpl
JobsPresenterEventHandlers <|.. JobsTab::Shim
JobsPresenterEventHandlers <|.. JobsPresenter
JobsTab o-- JobsTab::Shim
JobsTab::Shim o-- JobsPresenter
JobsPresenter o-- JobsPresenter::Display
JobsPresenter *-- JobsPresenterEventHandlersImpl

JobsDisplayWorkbenchView <|.. JobsPresenter::Display
JobsDisplayWorkbenchView <|.. JobsDisplayWorkbenchViewImpl

JobsPresenter::Display <|.. JobsPane

JobsListView <|.. JobsListViewImpl
JobsListView <|.. JobsList
JobsList *-- JobsListViewImpl

JobsPane *-- JobsDisplayWorkbenchViewImpl
JobsPane ..> JobsList : <<create>>

interface LauncherJobsPresenter::Display #LightGreen

class LauncherJobsTab::Shim #LightGreen
class LauncherJobsTab #LightGreen
class LauncherJobsPresenter #LightGreen
class LauncherJobsPane #LightGreen
class LauncherJobsList #LightGreen

JobsPresenter ..> JobsPane : <<create>>
LauncherJobsPresenter ..> LauncherJobsPane : <<create>>

JobsPresenterEventHandlers <|.. LauncherJobsTab::Shim
JobsPresenterEventHandlers <|.. LauncherJobsPresenter
LauncherJobsTab o-- LauncherJobsTab::Shim
LauncherJobsTab::Shim o-- LauncherJobsPresenter
LauncherJobsPresenter o-- LauncherJobsPresenter::Display
LauncherJobsPresenter *-- JobsPresenterEventHandlersImpl
JobsPresenterEventHandlersImpl ..> JobsDisplayWorkbenchView : <<use>>

JobsDisplayWorkbenchView <|.. LauncherJobsPresenter::Display
LauncherJobsPresenter::Display <|.. LauncherJobsPane

JobsListView <|.. LauncherJobsList
LauncherJobsList *-- JobsListViewImpl

LauncherJobsPane *-- JobsDisplayWorkbenchViewImpl
LauncherJobsPane ..> LauncherJobsList : <<create>>

JobsDisplayWorkbenchViewImpl ..> JobsListView : <<use>>

@enduml

